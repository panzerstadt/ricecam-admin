{"version":3,"sources":["components/Database/lib/firebase.js","components/Database/index.js","components/Dashboard/VideoGallery.js","components/Dashboard/RecorderMonitor.js","components/Dashboard/index.js","App.js","serviceWorker.js","index.js","components/Dashboard/RecorderMonitor.module.css","logo.svg"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","Object","keys","map","v","concat","firebase","apps","length","initializeApp","dayjs","locale","grabListOfVideoPaths","_ref","asyncToGenerator","regenerator_default","a","mark","_callee3","day","daystamp","wrap","_context3","prev","next","format","console","log","firestore","collection","doc","orderBy","get","then","_ref2","_callee2","querySnapshot","promises","filenames","srcs","_context2","forEach","_ref3","_callee","url","_context","data","push","split","slice","storage","ref","getDownloadURL","stop","_x3","apply","this","arguments","Promise","all","sent","abrupt","i","name","src","_x2","_x","pullAppStateFromDB","_ref4","_callee4","_context4","catch","e","downloadMultiple","files","zip","JSZip","axios","method","responseType","response","file","Blob","type","Error","generateAsync","content","FileSaver","saveAs","VideoList","_ref3$date","date","_useState","useState","_useState2","slicedToArray","showPreview","setShowPreview","_useState3","_useState4","vlist","setVlist","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","useEffect","JSON","stringify","react_default","createElement","Fragment","onClick","style","color","display","flexWrap","key","margin","height","controls","playsInline","href","RecorderMonitor","recorderState","setRecorderState","res","getRecorderState","recState","className","styles","recorderMonitorContainer","listTable","Dashboard","setDate","query","setQuery","dashboardContainer","onSubmit","preventDefault","onChange","target","value","placeholder","VideoGallery","Dashboard_RecorderMonitor","App","components_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","listContainer","__webpack_require__","p"],"mappings":"6PAEMA,EAAS,CACbC,OAAQC,oZAAYD,OACpBE,WAAYD,oZAAYC,WACxBC,YAAaF,oZAAYE,YACzBC,UAAWH,oZAAYG,UACvBC,cAAeJ,oZAAYI,cAC3BC,kBAAmBL,oZAAYK,mBAG3BC,EAAc,GACpBC,OAAOC,KAAKV,GAAQW,IAAI,SAAAC,GACtBJ,EAAYI,GAAKV,oZAAA,aAAAW,OAAyBD,MAGvCE,IAASC,KAAKC,QACjBF,IAASG,cAAcT,GAGVM,QAAf,0BCdAI,IAAMC,OAAO,MAEEL,IAmBFM,EAAoB,eAAAC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC5BJ,EAAWD,EACbT,IAAMS,GAAKM,OAAO,cAClBf,MAAQe,OAAO,cAEnBC,QAAQC,IAAI,yBAA0BP,GALJE,EAAAE,KAAA,EAOrBlB,EACVsB,YACAC,WAAW,YACXC,IAAIV,GACJS,WAAW,QACXE,QAAQ,OACRC,MACAC,KAPU,eAAAC,EAAAjC,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAOL,SAAAkB,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAxB,EAAAC,EAAAK,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACAa,EAAW,GACXC,EAAY,GAFZE,EAAAhB,KAAA,EAGEY,EAAcK,QAAd,eAAAC,EAAAzC,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAsB,SAAA0B,EAAMb,GAAN,IAAAc,EAAA,OAAA7B,EAAAC,EAAAK,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OAEpBoB,EAAMd,EAAIgB,OAAOF,IACvBN,EAAUS,KAAKH,EAAII,MAAM,KAAKC,OAAO,IAGrCZ,EAASU,KACPzC,EACG4C,UACAC,IAAIP,GACJQ,kBAVqB,wBAAAP,EAAAQ,SAAAV,MAAtB,gBAAAW,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,IAHF,cAAAjB,EAAAhB,KAAA,EAiBekC,QAAQC,IAAItB,GAjB3B,cAiBEE,EAjBFC,EAAAoB,KAAApB,EAAAqB,OAAA,SAkBGtB,EAAKpC,IAAI,SAACC,EAAG0D,GAAJ,MAAW,CACzBC,KAAMzB,EAAUwB,GAChBE,IAAK5D,MApBH,wBAAAoC,EAAAa,SAAAlB,MAPK,gBAAA8B,GAAA,OAAA/B,EAAAqB,MAAAC,KAAAC,YAAA,IAPqB,cAAAnC,EAAAuC,OAAA,SAAAvC,EAAAsC,MAAA,wBAAAtC,EAAA+B,SAAAnC,MAAH,gBAAAgD,GAAA,OAAArD,EAAA0C,MAAAC,KAAAC,YAAA,GAwCpBU,EAAkB,eAAAC,EAAAnE,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAoD,IAAA,OAAAtD,EAAAC,EAAAK,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACnBlB,EACVsB,YACAC,WAAW,YACXC,IAAI,YACJE,MACAC,KAAK,SAAAH,GACJ,OAAOA,EAAIgB,SAEZyB,MAAM,SAAAC,GAAC,OAAI9C,QAAQC,IAAI,+BAAgC6C,KAT1B,cAAAF,EAAAT,OAAA,SAAAS,EAAAV,MAAA,wBAAAU,EAAAjB,SAAAgB,MAAH,yBAAAD,EAAAb,MAAAC,KAAAC,YAAA,GC5DzBgB,EAAgB,eAAA5D,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAkB,EAAMuC,GAAN,IAAAC,EAAAtC,EAAA,OAAAtB,EAAAC,EAAAK,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACnBmD,EAAM,IAAIC,IAKdlD,QAAQC,IAAI+C,EAAM,IAEZrC,EAAW,GAEjBqC,EAAMvE,IAAN,eAAA+B,EAAAjC,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAU,SAAA0B,EAAMvC,GAAN,OAAAW,EAAAC,EAAAK,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OACRa,EAASU,KACP8B,IAAM,CAAEC,OAAQ,MAAOlC,IAAKxC,EAAE4D,IAAKe,aAAc,SAC9C9C,KAAK,SAAA+C,GACJ,IAAIC,EAAO,IAAIC,KAAK,CAACF,EAASlC,MAAO,CAAEqC,KAAM,cAC7CR,EAAIM,KAAK7E,EAAE2D,KAAMkB,KAElBV,MAAM,SAAAC,GAEL,MADA9C,QAAQC,IAAI,gBAAiB6C,GACvB,IAAIY,MAAM,sCATd,wBAAAvC,EAAAQ,SAAAV,MAAV,gBAAAsB,GAAA,OAAA/B,EAAAqB,MAAAC,KAAAC,YAAA,IAVuBjB,EAAAhB,KAAA,EAwBjBkC,QAAQC,IAAItB,GAxBK,OA0BvBsC,EAAIU,cAAc,CAAEF,KAAM,SAAUlD,KAAK,SAASqD,GAEhDC,IAAUC,OAAOF,EAAS,gBA5BL,wBAAA9C,EAAAa,SAAAlB,MAAH,gBAAA+B,GAAA,OAAArD,EAAA0C,MAAAC,KAAAC,YAAA,GAqHPgC,EAjEG,SAAA/C,GAA6B,IAAAgD,EAAAhD,EAA1BiD,YAA0B,IAAAD,EAAnB,aAAmBA,EAAAE,EAEPC,oBAAS,GAFFC,EAAA7F,OAAA8F,EAAA,EAAA9F,CAAA2F,EAAA,GAEtCI,EAFsCF,EAAA,GAEzBG,EAFyBH,EAAA,GAAAI,EAKnBL,mBAAS,IALUM,EAAAlG,OAAA8F,EAAA,EAAA9F,CAAAiG,EAAA,GAKtCE,EALsCD,EAAA,GAK/BE,EAL+BF,EAAA,GAAAG,EAMfT,oBAAS,GANMU,EAAAtG,OAAA8F,EAAA,EAAA9F,CAAAqG,EAAA,GAMtCE,EANsCD,EAAA,GAM7BE,EAN6BF,EAAA,GAAAG,EAOnBb,mBAAS,IAPUc,EAAA1G,OAAA8F,EAAA,EAAA9F,CAAAyG,EAAA,GAOtCE,EAPsCD,EAAA,GAO/BE,EAP+BF,EAAA,GAuB7C,OAfAG,oBAAU,WAERL,GAAW,GACXI,EAAS,IACTjG,EAAqB+E,GAClB1D,KAAK,SAAA7B,GACJA,GAAKiG,EAASjG,GACdqG,GAAW,KAEZlC,MAAM,SAAAC,GACLqC,EAASE,KAAKC,UAAUxC,IACxBiC,GAAW,MAEd,CAACd,IAGFsB,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAmG,SAAA,KACEF,EAAAjG,EAAAkG,cAAA,uCAC6BvB,EAD7B,KACqCS,EAAM5F,OAAQ,IACjDyG,EAAAjG,EAAAkG,cAAA,UAAQE,QAAS,kBAAM3C,EAAiB2B,KAAxC,gBACAa,EAAAjG,EAAAkG,cAAA,UAAQE,QAAS,kBAAMnB,GAAgBD,KAAvC,kBAIDA,GACCiB,EAAAjG,EAAAkG,cAAA,MAAIG,MAAO,CAAEC,MAAO,QAApB,mEAIFL,EAAAjG,EAAAkG,cAAA,OACEG,MAAO,CACLE,QAAS,OACTC,SAAU,SAGXhB,GAAW,aACXI,EACAR,EAAMjG,IAAI,SAACC,EAAG0D,GACb,OACEmD,EAAAjG,EAAAkG,cAAA,OAAKO,IAAKrH,EAAE4D,IAAKqD,MAAO,CAAEK,OAAQ,IAC9B1B,EAGAiB,EAAAjG,EAAAkG,cAAA,SAAOS,OAAQ,IAAKC,UAAQ,EAACC,aAAW,GACtCZ,EAAAjG,EAAAkG,cAAA,UAAQlD,IAAK5D,EAAE4D,IAAKmB,KAAK,gBAH3B8B,EAAAjG,EAAAkG,cAAA,KAAGY,KAAM1H,EAAE4D,KAAM5D,EAAE2D,MAMrBkD,EAAAjG,EAAAkG,cAAA,WACAD,EAAAjG,EAAAkG,cAAA,aAAQ9G,EAAE2D,6BC1ETgE,EAnCS,WAAM,IAAAnC,EACcC,mBAAS,IADvBC,EAAA7F,OAAA8F,EAAA,EAAA9F,CAAA2F,EAAA,GACrBoC,EADqBlC,EAAA,GACNmC,EADMnC,EAAA,GAE5BgB,oBAAU,YACc,eAAAjG,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAA0B,IAAA,IAAAuF,EAAA,OAAAnH,EAAAC,EAAAK,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACL2C,IADK,OACjB+D,EADiBrF,EAAAe,KAEvBqE,EAAiBC,GAFM,wBAAArF,EAAAQ,SAAAV,MAAH,yBAAA9B,EAAA0C,MAAAC,KAAAC,YAAA,EAItB0E,IACC,IAEH,IAAMC,EAAWnI,OAAOC,KAAK8H,GAAe7H,IAAI,SAACC,EAAG0D,GAClD,OACEmD,EAAAjG,EAAAkG,cAAA,MAAIO,IAAK3D,GACPmD,EAAAjG,EAAAkG,cAAA,UAAK9G,GACL6G,EAAAjG,EAAAkG,cAAA,aAAA7G,OAAQ2H,EAAc5H,QAK5B,OACE6G,EAAAjG,EAAAkG,cAAA,OAAKmB,UAAWC,IAAOC,0BACrBtB,EAAAjG,EAAAkG,cAAA,SAAOmB,UAAWC,IAAOE,WACvBvB,EAAAjG,EAAAkG,cAAA,aACED,EAAAjG,EAAAkG,cAAA,UACED,EAAAjG,EAAAkG,cAAA,UACED,EAAAjG,EAAAkG,cAAA,wCAIND,EAAAjG,EAAAkG,cAAA,aAAQkB,uBCFDK,EA1BG,WAAM,IAAA7C,EACEC,mBAAS,cADXC,EAAA7F,OAAA8F,EAAA,EAAA9F,CAAA2F,EAAA,GACfD,EADeG,EAAA,GACT4C,EADS5C,EAAA,GAAAI,EAEIL,mBAAS,cAFbM,EAAAlG,OAAA8F,EAAA,EAAA9F,CAAAiG,EAAA,GAEfyC,EAFexC,EAAA,GAERyC,EAFQzC,EAAA,GAStB,OACEc,EAAAjG,EAAAkG,cAAA,OAAKmB,UAAWC,IAAOO,oBACrB5B,EAAAjG,EAAAkG,cAAA,2BACAD,EAAAjG,EAAAkG,cAAA,QAAM4B,SARuB,SAAAtE,GAC/BoE,EAASjD,GACTnB,EAAEuE,mBAOE9B,EAAAjG,EAAAkG,cAAA,SACE8B,SAAU,SAAAxE,GAAC,OAAIkE,EAAQlE,EAAEyE,OAAOC,QAChCA,MAAOvD,EACPwD,YAAY,eAEdlC,EAAAjG,EAAAkG,cAAA,UAAQ/B,KAAK,UAAb,eAEF8B,EAAAjG,EAAAkG,cAACkC,EAAD,CAAczD,KAAMgD,IACpB1B,EAAAjG,EAAAkG,cAACmC,EAAD,QCDSC,MArBf,WACE,OACErC,EAAAjG,EAAAkG,cAAA,OAAKmB,UAAU,OACbpB,EAAAjG,EAAAkG,cAAA,UAAQmB,UAAU,cAChBpB,EAAAjG,EAAAkG,cAAA,UACED,EAAAjG,EAAAkG,cAAA,2CACAD,EAAAjG,EAAAkG,cAAA,6CACAD,EAAAjG,EAAAkG,cAAA,2EACAD,EAAAjG,EAAAkG,cAAA,4EAGAD,EAAAjG,EAAAkG,cAAA,oCACAD,EAAAjG,EAAAkG,cAAA,WACAD,EAAAjG,EAAAkG,cAAA,gDAGJD,EAAAjG,EAAAkG,cAACqC,EAAD,QCVcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7C,EAAAjG,EAAAkG,cAAC6C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnI,KAAK,SAAAoI,GACjCA,EAAaC,mCElInBC,EAAAC,QAAA,CAAkBC,cAAA,uCAAAjC,UAAA,uICDlB+B,EAAAC,QAAiBE,EAAAC,EAAuB","file":"static/js/main.f9e28458.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId\n};\n\nconst reactConfig = {};\nObject.keys(config).map(v => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./lib/firebase\";\n\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nexport default firebase;\n\nexport const logging = (message, callback) => {\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"logs\")\n    .doc(timestamp)\n    .set({ message: message }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const grabListOfVideoPaths = async day => {\n  const daystamp = day\n    ? dayjs(day).format(\"YYYY-MM-DD\")\n    : dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"grabbing videos from: \", daystamp);\n\n  return await firebase\n    .firestore()\n    .collection(\"videoURL\")\n    .doc(daystamp)\n    .collection(\"urls\")\n    .orderBy(\"url\")\n    .get()\n    .then(async querySnapshot => {\n      let promises = [];\n      let filenames = [];\n      await querySnapshot.forEach(async doc => {\n        // here are your DB video filepaths\n        const url = doc.data().url;\n        filenames.push(url.split(\"/\").slice(-1));\n        //console.log(url);\n\n        promises.push(\n          firebase\n            .storage()\n            .ref(url)\n            .getDownloadURL() // this is an async function\n        );\n      });\n\n      const srcs = await Promise.all(promises);\n      return srcs.map((v, i) => ({\n        name: filenames[i],\n        src: v\n      }));\n    });\n};\n\n// single call\nexport const pullAppStateFromDB = async () => {\n  return await firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .get()\n    .then(doc => {\n      return doc.data();\n    })\n    .catch(e => console.log(\"REMOTE DB STATE READ ERROR: \", e));\n};\n\nexport const FireStoreState = ({\n  collection = \"appState\",\n  doc = \"commands\",\n  onUpdate\n}) => {\n  const [dbState, setDBState] = useState({});\n\n  useEffect(() => {\n    firebase\n      .collection(collection)\n      .doc(doc)\n      .onSnapshot(snapshot => {\n        setDBState(snapshot.data());\n      });\n    return () => setDBState({});\n  }, []);\n\n  useEffect(() => {\n    if (onUpdate) onUpdate(dbState);\n  }, [dbState]);\n\n  return <p>db state: {JSON.stringify(dbState, null, 2)}</p>;\n};\n","import React, { useState, useEffect } from \"react\";\nimport JSZip from \"jszip\";\nimport FileSaver from \"file-saver\";\nimport axios from \"axios\";\n\nimport { grabListOfVideoPaths } from \"../Database\";\n\nconst downloadMultiple = async files => {\n  var zip = new JSZip();\n  // zip.file(\"Hello.txt\", \"Hello World\\n\");\n  // var img = zip.folder(\"images\");\n  // img.file(\"smile.gif\", imgData, { base64: true });\n\n  console.log(files[0]);\n\n  const promises = [];\n\n  files.map(async v => {\n    promises.push(\n      axios({ method: \"get\", url: v.src, responseType: \"blob\" })\n        .then(response => {\n          let file = new Blob([response.data], { type: \"video/mp4\" });\n          zip.file(v.name, file);\n        })\n        .catch(e => {\n          console.log(\"axios error: \", e);\n          throw new Error(\"download failed. check console.\");\n        })\n    );\n  });\n\n  await Promise.all(promises);\n\n  zip.generateAsync({ type: \"blob\" }).then(function(content) {\n    // see FileSaver.js\n    FileSaver.saveAs(content, \"videos.zip\");\n  });\n};\n\nexport const download = (\n  content,\n  fileName = \"text.mp4\",\n  contentType = \"video/webm\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nconst downloadOneVideo = video => {\n  axios({ method: \"get\", url: video.src, responseType: \"blob\" }).then(\n    response => {\n      download(response.data);\n    }\n  );\n};\n\nconst VideoList = ({ date = \"2019-05-08\" }) => {\n  // toggle preview\n  const [showPreview, setShowPreview] = useState(false);\n\n  // list videos from db\n  const [vlist, setVlist] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const d = \"YYYY-MM-DD\";\n    setLoading(true);\n    setError(\"\");\n    grabListOfVideoPaths(date)\n      .then(v => {\n        v && setVlist(v);\n        setLoading(false);\n      })\n      .catch(e => {\n        setError(JSON.stringify(e));\n        setLoading(false);\n      });\n  }, [date]);\n\n  return (\n    <>\n      <h4>\n        current list of videos on {date}: {vlist.length}{\" \"}\n        <button onClick={() => downloadMultiple(vlist)}>DOWNLOAD ALL</button>\n        <button onClick={() => setShowPreview(!showPreview)}>\n          preview video\n        </button>\n      </h4>\n      {showPreview && (\n        <h4 style={{ color: \"red\" }}>\n          WARNING: video previews count towards download quota of 1GB/day\n        </h4>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        }}\n      >\n        {loading && \"Loading...\"}\n        {error}\n        {vlist.map((v, i) => {\n          return (\n            <div key={v.src} style={{ margin: 5 }}>\n              {!showPreview ? (\n                <a href={v.src}>{v.name}</a>\n              ) : (\n                <video height={200} controls playsInline>\n                  <source src={v.src} type=\"video/webm\" />\n                </video>\n              )}\n              <br />\n              <small>{v.name}</small>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default VideoList;\n","import React, { useState, useEffect } from \"react\";\n\nimport styles from \"./RecorderMonitor.module.css\";\n\nimport { pullAppStateFromDB } from \"../Database\";\n\nconst RecorderMonitor = () => {\n  const [recorderState, setRecorderState] = useState({});\n  useEffect(() => {\n    const getRecorderState = async () => {\n      const res = await pullAppStateFromDB();\n      setRecorderState(res);\n    };\n    getRecorderState();\n  }, []);\n\n  const recState = Object.keys(recorderState).map((v, i) => {\n    return (\n      <tr key={i}>\n        <td>{v}</td>\n        <td>{`${recorderState[v]}`}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <div className={styles.recorderMonitorContainer}>\n      <table className={styles.listTable}>\n        <thead>\n          <tr>\n            <td>\n              <h3>video recorder settings</h3>\n            </td>\n          </tr>\n        </thead>\n        <tbody>{recState}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RecorderMonitor;\n","import React, { useState, useEffect } from \"react\";\n\nimport VideoGallery from \"./VideoGallery\";\nimport RecorderMonitor from \"./RecorderMonitor\";\n\nimport styles from \"./index.module.css\";\n\nconst Dashboard = () => {\n  const [date, setDate] = useState(\"2019-05-10\");\n  const [query, setQuery] = useState(\"2019-05-10\");\n\n  const handleUpdateVideoGallery = e => {\n    setQuery(date);\n    e.preventDefault();\n  };\n\n  return (\n    <div className={styles.dashboardContainer}>\n      <h1>ricecam admin</h1>\n      <form onSubmit={handleUpdateVideoGallery}>\n        <input\n          onChange={e => setDate(e.target.value)}\n          value={date}\n          placeholder=\"2019-05-08\"\n        />\n        <button type=\"submit\">get videos</button>\n      </form>\n      <VideoGallery date={query} />\n      <RecorderMonitor />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ol>\n          <li>DONE pull state from database</li>\n          <li>DONE see current recorder state</li>\n          <li>DONE view all videos on a certain day (and their predictions)</li>\n          <li>\n            LATER allow admin to mark the ones to keep and delete the rest\n          </li>\n          <li>allow download in bulk</li>\n          <br />\n          <li>larger video (maybe 1080p square</li>\n        </ol>\n      </header>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"RecorderMonitor_listContainer__14aDU\",\"listTable\":\"RecorderMonitor_listTable__3CBxQ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}