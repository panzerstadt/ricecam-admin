{"version":3,"sources":["components/Database/lib/firebase.js","components/Database/index.js","components/Dashboard/VideoGallery.js","components/Dashboard/RecorderMonitor.js","components/Dashboard/index.js","App.js","serviceWorker.js","index.js","components/Dashboard/RecorderMonitor.module.css","logo.svg"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","Object","keys","map","v","concat","firebase","apps","length","initializeApp","dayjs","locale","grabListOfVideoPaths","_ref","asyncToGenerator","regenerator_default","a","mark","_callee3","day","daystamp","wrap","_context3","prev","next","format","console","log","firestore","collection","doc","orderBy","get","then","_ref2","_callee2","querySnapshot","promises","filenames","srcs","_context2","forEach","_ref3","_callee","url","_context","data","push","split","slice","storage","ref","getDownloadURL","catch","e","message","code","stop","_x3","apply","this","arguments","Promise","all","sent","abrupt","i","name","src","_x2","_x","pullAppStateFromDB","_ref4","_callee4","_context4","downloadMultiple","files","status","zip","JSZip","axios","method","responseType","response","file","Blob","type","JSON","stringify","_x4","generateAsync","content","FileSaver","saveAs","VideoList","_ref3$date","date","_useState","useState","_useState2","slicedToArray","showPreview","setShowPreview","_useState3","_useState4","statuses","setStatus","handleStatus","statusText","p","toConsumableArray","_useState5","_useState6","vlist","setVlist","_useState7","_useState8","setLoading","useEffect","videoCount","filter","react_default","createElement","Fragment","style","color","onClick","height","overflowY","borderRadius","backgroundColor","padding","margin","textAlign","key","fontSize","borderBottom","display","flexWrap","controls","autoPlay","playsInline","loop","muted","href","RecorderMonitor","recorderState","setRecorderState","res","getRecorderState","recState","className","styles","recorderMonitorContainer","listTable","Dashboard","setDate","query","setQuery","dashboardContainer","onSubmit","preventDefault","onChange","target","value","placeholder","VideoGallery","Dashboard_RecorderMonitor","App","components_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","listContainer","__webpack_require__"],"mappings":"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","file":"static/js/main.e93e2543.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId\n};\n\nconst reactConfig = {};\nObject.keys(config).map(v => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./lib/firebase\";\n\n// timestamps\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nexport default firebase;\n\nexport const logging = (message, callback) => {\n  const timestamp = dayjs().format(\"YYYY-MM-DDTHH:mm:ss:SSS\");\n  const daystamp = dayjs().format(\"YYYY-MM-DD\");\n\n  firebase\n    .firestore()\n    .collection(\"logs\")\n    .doc(daystamp)\n    .collection(\"logs\")\n    .doc(timestamp)\n    .set({ message: message }, { merge: true })\n    .then(v => {\n      callback && callback(v);\n    })\n    .catch(e => console.log(\"LOGGING ERROR: \", e));\n};\n\nexport const grabListOfVideoPaths = async day => {\n  const daystamp = day\n    ? dayjs(day).format(\"YYYY-MM-DD\")\n    : dayjs().format(\"YYYY-MM-DD\");\n\n  console.log(\"grabbing videos from: \", daystamp);\n\n  return await firebase\n    .firestore()\n    .collection(\"videoURL\")\n    .doc(daystamp)\n    .collection(\"urls\")\n    .orderBy(\"url\")\n    .get()\n    .then(async querySnapshot => {\n      let promises = [];\n      let filenames = [];\n      console.log(querySnapshot);\n      await querySnapshot.forEach(async doc => {\n        // here are your DB video filepaths\n        const url = doc.data().url;\n        filenames.push(url.split(\"/\").slice(-1));\n        console.log(url);\n\n        promises.push(\n          firebase\n            .storage()\n            .ref(url)\n            .getDownloadURL() // this is an async function\n            .catch(e => {\n              console.log(e.message);\n              if (e.code === \"storage/object-not-found\")\n                return \"video not found\";\n              else return false;\n            })\n        );\n      });\n\n      const srcs = await Promise.all(promises);\n      return srcs.map((v, i) => ({\n        name: filenames[i][0],\n        src: v\n      }));\n    });\n};\n\n// single call\nexport const pullAppStateFromDB = async () => {\n  return await firebase\n    .firestore()\n    .collection(\"appState\")\n    .doc(\"commands\")\n    .get()\n    .then(doc => {\n      return doc.data();\n    })\n    .catch(e => console.log(\"REMOTE DB STATE READ ERROR: \", e));\n};\n\nexport const FireStoreState = ({\n  collection = \"appState\",\n  doc = \"commands\",\n  onUpdate\n}) => {\n  const [dbState, setDBState] = useState({});\n\n  useEffect(() => {\n    firebase\n      .collection(collection)\n      .doc(doc)\n      .onSnapshot(snapshot => {\n        setDBState(snapshot.data());\n      });\n    return () => setDBState({});\n  }, []);\n\n  useEffect(() => {\n    if (onUpdate) onUpdate(dbState);\n  }, [dbState]);\n\n  return <p>db state: {JSON.stringify(dbState, null, 2)}</p>;\n};\n","import React, { useState, useEffect } from \"react\";\nimport JSZip from \"jszip\";\nimport FileSaver from \"file-saver\";\nimport axios from \"axios\";\n\nimport { grabListOfVideoPaths } from \"../Database\";\n\nconst downloadMultiple = async (files, status) => {\n  var zip = new JSZip();\n  // zip.file(\"Hello.txt\", \"Hello World\\n\");\n  // var img = zip.folder(\"images\");\n  // img.file(\"smile.gif\", imgData, { base64: true });\n\n  const promises = [];\n\n  files.map(async (v, i) => {\n    status && status(`item no.${i + 1} - performing GET requests`);\n    promises.push(\n      axios({ method: \"get\", url: v.src, responseType: \"blob\" })\n        .then(response => {\n          status &&\n            status(`item no.${i + 1} - download complete. adding to zip file`);\n          let file = new Blob([response.data], { type: \"video/mp4\" });\n          zip.file(v.name, file);\n        })\n        .catch(e => {\n          status &&\n            status(`item no.${i + 1} - download error: ${JSON.stringify(e)}`);\n          console.log(\"axios error: \", e);\n          //throw new Error(\"download failed. check console.\");\n        })\n    );\n  });\n\n  await Promise.all(promises);\n  status && status(\"all downloads complete. generating zip file.\");\n\n  zip.generateAsync({ type: \"blob\" }).then(function(content) {\n    status && status(\"zip complete. saving!\");\n    // see FileSaver.js\n    FileSaver.saveAs(content, \"videos.zip\");\n  });\n};\n\nexport const download = (\n  content,\n  fileName = \"text.mp4\",\n  contentType = \"video/webm\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nconst downloadOneVideo = video => {\n  axios({ method: \"get\", url: video.src, responseType: \"blob\" }).then(\n    response => {\n      download(response.data);\n    }\n  );\n};\n\nconst VideoList = ({ date = \"2019-05-08\" }) => {\n  // toggle preview\n  const [showPreview, setShowPreview] = useState(false);\n  // status reporting\n  const [statuses, setStatus] = useState([]);\n  const handleStatus = statusText => {\n    setStatus(p => [...p.slice(-5), statusText]);\n  };\n\n  // list videos from db\n  const [vlist, setVlist] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const d = \"YYYY-MM-DD\";\n    setLoading(true);\n    handleStatus(`loading videos for date: ${date}`);\n\n    grabListOfVideoPaths(date)\n      .then(v => {\n        v && setVlist(v);\n        setLoading(false);\n        handleStatus(`videos loaded for date: ${date}`);\n      })\n      .catch(e => {\n        setLoading(false);\n        handleStatus(`videos loaded error: ${JSON.stringify(e)}`);\n      });\n  }, [date]);\n\n  const videoCount =\n    vlist.length > 0\n      ? vlist.filter(v => {\n          const test = v.src && v.src !== \"video not found\";\n          return test;\n        }).length\n      : 0;\n\n  return (\n    <>\n      <h4>\n        current list of videos on {date}:{\" \"}\n        <span\n          style={{\n            color:\n              videoCount === vlist.length && videoCount ? \"black\" : \"orange\"\n          }}\n        >\n          {videoCount} (storage) / {vlist.length} (db){\" \"}\n        </span>\n        <button onClick={() => downloadMultiple(vlist, handleStatus)}>\n          DOWNLOAD ALL\n        </button>\n        <button onClick={() => setShowPreview(!showPreview)}>\n          preview video\n        </button>\n      </h4>\n      {showPreview && (\n        <h4 style={{ color: \"red\" }}>\n          WARNING: video previews count towards download quota of 1GB/day\n        </h4>\n      )}\n      <ul\n        style={{\n          height: 130,\n          overflowY: \"auto\",\n          borderRadius: 8,\n          backgroundColor: \"black\",\n          padding: 10,\n          color: \"white\",\n          margin: \"0 30px\",\n          textAlign: \"left\"\n        }}\n      >\n        {statuses.map((v, i) => (\n          <li\n            key={`${date}-${i}`}\n            style={{\n              fontSize: 11,\n              padding: \"2px 0\",\n              borderBottom: \"1px solid rgba(143, 143, 143, 0.2)\"\n            }}\n          >\n            {v}\n          </li>\n        ))}\n      </ul>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        }}\n      >\n        {vlist.map((v, i) => {\n          if (!v.src || v.src === \"video not found\") return null;\n          return (\n            <div key={v.name} style={{ margin: \"10px auto\" }}>\n              {!showPreview ? (\n                <a href={v.src}>{v.name}</a>\n              ) : (\n                <video height={400} controls autoPlay playsInline loop muted>\n                  <source src={v.src} type=\"video/webm\" />\n                </video>\n              )}\n              <br />\n              <small>{v.name}</small>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default VideoList;\n","import React, { useState, useEffect } from \"react\";\n\nimport styles from \"./RecorderMonitor.module.css\";\n\nimport { pullAppStateFromDB } from \"../Database\";\n\nconst RecorderMonitor = () => {\n  const [recorderState, setRecorderState] = useState({});\n  useEffect(() => {\n    const getRecorderState = async () => {\n      const res = await pullAppStateFromDB();\n      setRecorderState(res);\n    };\n    getRecorderState();\n  }, []);\n\n  const recState = Object.keys(recorderState).map((v, i) => {\n    return (\n      <tr key={i}>\n        <td>{v}</td>\n        <td>{`${recorderState[v]}`}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <div className={styles.recorderMonitorContainer}>\n      <table className={styles.listTable}>\n        <thead>\n          <tr>\n            <td>\n              <h3>video recorder settings</h3>\n            </td>\n          </tr>\n        </thead>\n        <tbody>{recState}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RecorderMonitor;\n","import React, { useState, useEffect } from \"react\";\n\nimport VideoGallery from \"./VideoGallery\";\nimport RecorderMonitor from \"./RecorderMonitor\";\n\nimport styles from \"./index.module.css\";\n\nconst Dashboard = () => {\n  const [date, setDate] = useState(\"2019-05-10\");\n  const [query, setQuery] = useState(\"2019-05-10\");\n\n  const handleUpdateVideoGallery = e => {\n    setQuery(date);\n    e.preventDefault();\n  };\n\n  return (\n    <div className={styles.dashboardContainer}>\n      <h1>ricecam admin</h1>\n      <form onSubmit={handleUpdateVideoGallery}>\n        <input\n          onChange={e => setDate(e.target.value)}\n          value={date}\n          placeholder=\"2019-05-08\"\n        />\n        <button type=\"submit\">get videos</button>\n      </form>\n      <VideoGallery date={query} />\n      <RecorderMonitor />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ol>\n          <li>DONE pull state from database</li>\n          <li>DONE see current recorder state</li>\n          <li>DONE view all videos on a certain day (and their predictions)</li>\n          <li>\n            LATER allow admin to mark the ones to keep and delete the rest\n          </li>\n          <li>DONE allow download in bulk</li>\n          <li>DONE larger video (maybe 1080p square)</li>\n        </ol>\n      </header>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"RecorderMonitor_listContainer__14aDU\",\"listTable\":\"RecorderMonitor_listTable__3CBxQ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}